CREATE SCHEMA
IF NOT EXISTS products AUTHORIZATION doadmin;

-- Permissions

GRANT ALL ON SCHEMA products TO doadmin;

----------------------------------------------------------------------------------------------------------------------------------

-- products.products_info definition

-- Drop table

DROP TABLE  IF EXISTS products.products_info;

CREATE TABLE products.products_info (
	product_id serial4 NOT NULL,
	product_name varchar(100) NULL,
	category _varchar NULL,
	price numeric(10, 2) NULL,
	sale_price numeric(10, 2) NULL,
	stock int4 NULL,
	status varchar(20) GENERATED ALWAYS AS
(
CASE
    WHEN stock = 0 THEN 'sold out'::text
    ELSE 'in stock'::text
END) STORED NULL,
	published bool NULL,
	product_images _varchar NULL,
	variants jsonb NULL,
	properties jsonb NULL,
	product_description text DEFAULT 'Product description'::text NOT NULL,
	CONSTRAINT products_info_pkey PRIMARY KEY
(product_id)
);

-- Permissions

ALTER TABLE products.products_info OWNER TO doadmin;
GRANT ALL ON TABLE products.products_info TO doadmin;



-----------------------------------------------------------------------------------------------------------------------------------
-- products."attributes" definition

-- Drop table

DROP TABLE  IF EXISTS products."attributes";

CREATE TABLE products."attributes"
(
    attribute_id serial4 NOT NULL,
    "name" text NOT NULL,
    display_name text NULL,
    published bool DEFAULT true NULL,
    CONSTRAINT attributes_name_display_name_key UNIQUE (name, display_name),
    CONSTRAINT attributes_name_key UNIQUE (name),
    CONSTRAINT attributes_pkey PRIMARY KEY (attribute_id)
);

-- Permissions

ALTER TABLE products."attributes" OWNER TO doadmin;
GRANT ALL ON TABLE products."attributes" TO doadmin;

---------------------------------------------------------------------------------------------------------------------------------
-- products.attribute_values definition

-- Drop table

DROP TABLE IF EXISTS  products.attribute_values;

CREATE TABLE products.attribute_values
(
    attribute_value_id serial4 NOT NULL,
    attribute_id int4 NULL,
    value text NOT NULL,
    display_name text NULL,
    published bool DEFAULT true NULL,
    CONSTRAINT attribute_values_attribute_id_value_display_name_key UNIQUE
(attribute_id, value, display_name),
    CONSTRAINT attribute_values_pkey PRIMARY KEY
(attribute_value_id)
);

-- Permissions

ALTER TABLE products.attribute_values OWNER TO doadmin;
GRANT ALL ON TABLE products.attribute_values TO doadmin;


-- products.attribute_values foreign keys

ALTER TABLE products.attribute_values ADD CONSTRAINT attribute_values_attribute_id_fkey FOREIGN KEY (attribute_id) REFERENCES products."attributes"(attribute_id) ON DELETE CASCADE;



------------------------------------------------------------------------------------------------------------------------------------

-- products.categories definition

-- Drop table

DROP TABLE  IF EXISTS products.categories;

CREATE TABLE products.categories
(
    --category_id int4 DEFAULT nextval('products.categories_id_seq'
   -- ::regclass) NOT NULL,
    category_id INT GENERATED BY DEFAULT AS IDENTITY,
	category_image varchar
(100) NULL,
	"name" varchar
(50) NULL,
	description varchar
(50) NULL,
	published bool NULL,
	CONSTRAINT categories_pkey PRIMARY KEY
(category_id)
);

-- Permissions

ALTER TABLE products.categories OWNER TO doadmin;
GRANT ALL ON TABLE products.categories TO doadmin;

-------------------------------------------------------------------------------------------------------------------------------------------------------


-- products.clients definition

-- Drop table

DROP TABLE  IF EXISTS products.clients;

CREATE TABLE products.clients
(
    client_id serial4 NOT NULL,
    joining_date date NULL,
    "name" varchar(50) NULL,
    email text NULL,
    phone varchar(50) NULL,
    "password" varchar(255) DEFAULT 'doamin'
    ::character varying NOT NULL,
	CONSTRAINT clients_email_check CHECK
    ((email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'::text)),
	CONSTRAINT clients_pkey PRIMARY KEY
    (client_id)
);
    CREATE UNIQUE INDEX unique_lower_email ON products.clients USING btree
    (lower
    (email));

    -- Permissions

    ALTER TABLE products.clients OWNER TO doadmin;
    GRANT ALL ON TABLE products.clients TO doadmin;



    ---------------------------------------------------------------------------------------------------------------------------------
    -- products.client_addresses definition

    -- Drop table

    DROP TABLE  IF EXISTS  products.client_addresses;

    CREATE TABLE products.client_addresses
    (
        address_id serial4 NOT NULL,
        client_id int4 NULL,
        first_name varchar(20) NULL,
        last_name varchar(20) NULL,
        phone varchar(50) NULL,
        email text NULL,
        address text NULL,
        country varchar(20) NULL,
        city varchar(20) NULL,
        region varchar(100) NULL,
        default_address bool DEFAULT false NULL,
        CONSTRAINT client_addresses_email_check CHECK ((email
        ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'::text)),
	CONSTRAINT client_addresses_pkey PRIMARY KEY
        (address_id)
);
        CREATE UNIQUE INDEX unique_lower_email_client_addresses ON products.client_addresses USING btree
        (lower
        (email));

        -- Permissions

        ALTER TABLE products.client_addresses OWNER TO doadmin;
        GRANT ALL ON TABLE products.client_addresses TO doadmin;


        -- products.client_addresses foreign keys

        ALTER TABLE products.client_addresses ADD CONSTRAINT client_addresses_client_id_fkey FOREIGN KEY (client_id) REFERENCES products.clients(client_id) ON DELETE CASCADE;
        ------------------------------------------------------------------------------------------------------------------------------------
        -- products.clients_orders definition

        -- Drop table

        DROP TABLE  IF EXISTS products.clients_orders;

        CREATE TABLE products.clients_orders
        (
            order_id serial4 NOT NULL,
            client_id int4 NOT NULL,
            order_date timestamp DEFAULT CURRENT_TIMESTAMP NULL,
            shipping_address text NOT NULL,
            phone varchar(50) NULL,
            payment_method varchar(50) NOT NULL,
            total_amount numeric(10, 2) NULL,
            status varchar(20) DEFAULT 'pending'
            ::character varying NULL,
	"action" varchar
            (50) NULL,
	created_at timestamp DEFAULT CURRENT_TIMESTAMP NULL,
	updated_at timestamp DEFAULT CURRENT_TIMESTAMP NULL,
	CONSTRAINT clients_orders_pkey PRIMARY KEY
            (order_id),
	CONSTRAINT clients_orders_status_check CHECK
            (((status)::text = ANY
            ((ARRAY['pending'::character varying, 'shipped'::character varying, 'delivered'::character varying, 'cancelled'::character varying])::text[]))),
	CONSTRAINT clients_orders_total_amount_check CHECK
            ((total_amount >=
            (0)::numeric))
);

            -- Permissions

            ALTER TABLE products.clients_orders OWNER TO doadmin;
            GRANT ALL ON TABLE products.clients_orders TO doadmin;


            -- products.clients_orders foreign keys

            ALTER TABLE products.clients_orders ADD CONSTRAINT clients_orders_client_id_fkey FOREIGN KEY (client_id) REFERENCES products.clients(client_id) ON DELETE CASCADE;

            -----------------------------------------------------------------------------------------------------------------------------------
            -- products.coupons definition

            -- Drop table

            DROP TABLE  IF EXISTS products.coupons;

            CREATE TABLE products.coupons
            (
                coupon_id serial4 NOT NULL,
                banner_image_path varchar(255) NULL,
                campaign_code varchar(50) NULL,
                discount_type varchar(15) NULL,
                coupon_code varchar(100) NULL,
                discount_percentage numeric(3, 2) NULL,
                discount numeric(10, 2) NULL,
                expiration_date date NULL,
                active bool NULL,
                minimum_amount numeric(10, 2) NULL,
                start_date date NULL,
                published bool DEFAULT true NULL,
                CONSTRAINT coupons_coupon_code_key UNIQUE (coupon_code),
                CONSTRAINT coupons_pkey PRIMARY KEY (coupon_id)
            );

            -- Permissions

            ALTER TABLE products.coupons OWNER TO doadmin;
            GRANT ALL ON TABLE products.coupons TO doadmin;

            ---------------------------------------------------------------------------------------------------------------------------------
            -- products.invoices definition

            -- Drop table

            DROP TABLE  IF EXISTS products.invoices;

            CREATE TABLE products.invoices
            (
                invoice_id uuid DEFAULT gen_random_uuid() NOT NULL,
                user_id int4 NOT NULL,
                status varchar(20) DEFAULT 'pending'
                ::character varying NULL,
	total_amount numeric
                (10, 2) NULL,
	issued_at timestamptz DEFAULT CURRENT_TIMESTAMP NULL,
	due_date timestamptz NULL,
	order_id int4 NOT NULL,
	CONSTRAINT invoices_pkey PRIMARY KEY
                (invoice_id)
);

                -- Permissions

                ALTER TABLE products.invoices OWNER TO doadmin;
                GRANT ALL ON TABLE products.invoices TO doadmin;


                -- products.invoices foreign keys

                ALTER TABLE products.invoices ADD CONSTRAINT fk_order FOREIGN KEY (order_id) REFERENCES products.clients_orders(order_id) ON DELETE CASCADE;
                ALTER TABLE products.invoices ADD CONSTRAINT invoices_user_id_fkey FOREIGN KEY (user_id) REFERENCES products.clients(client_id) ON DELETE CASCADE;

                --------------------------------------------------------------------------------------------------------------------------------
                -- products.invoice_items definition

                -- Drop table

                DROP TABLE  IF EXISTS products.invoice_items;

                CREATE TABLE products.invoice_items (
	id uuid DEFAULT gen_random_uuid() NOT NULL,
	invoice_id uuid NOT NULL,
	description text NOT NULL,
	quantity int4 NOT NULL,
	unit_price numeric(10, 2) NOT NULL,
	total_price numeric(10, 2) GENERATED ALWAYS AS
                ((quantity::numeric * unit_price)) STORED NULL,
	CONSTRAINT invoice_items_pkey PRIMARY KEY
                (id),
	CONSTRAINT invoice_items_quantity_check CHECK
                ((quantity > 0))
);

                -- Permissions

                ALTER TABLE products.invoice_items OWNER TO doadmin;
                GRANT ALL ON TABLE products.invoice_items TO doadmin;


                -- products.invoice_items foreign keys

                ALTER TABLE products.invoice_items ADD CONSTRAINT invoice_items_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES products.invoices(invoice_id) ON DELETE CASCADE;

                ---------------------------------------------------------------------------------------------------------------------------------------
                -- products.products_coupons definition

                -- Drop table

                DROP TABLE  IF EXISTS products.products_coupons;

                CREATE TABLE products.products_coupons
                (
                    product_id int4 NOT NULL,
                    coupon_id int4 NOT NULL,
                    CONSTRAINT products_coupons_pkey PRIMARY KEY (product_id, coupon_id)
                );

                -- Permissions

                ALTER TABLE products.products_coupons OWNER TO doadmin;
                GRANT ALL ON TABLE products.products_coupons TO doadmin;


                -- products.products_coupons foreign keys

                ALTER TABLE products.products_coupons ADD CONSTRAINT products_coupons_coupon_id_fkey FOREIGN KEY (coupon_id) REFERENCES products.coupons(coupon_id) ON DELETE CASCADE;
                ALTER TABLE products.products_coupons ADD CONSTRAINT products_coupons_product_id_fkey FOREIGN KEY (product_id) REFERENCES products.products_info(product_id) ON DELETE CASCADE;

                -----------------------------------------------------------------------------------------------------------------------------------------

                -- products.sessions definition

                -- Drop table

                DROP TABLE  IF EXISTS products.sessions;

                CREATE TABLE products.sessions
                (
                    session_id uuid DEFAULT gen_random_uuid() NOT NULL,
                    user_id int4 NULL,
                    "data" jsonb NOT NULL,
                    expires_at timestamp NOT NULL,
                    created_at timestamp DEFAULT CURRENT_TIMESTAMP NULL,
                    CONSTRAINT sessions_pkey PRIMARY KEY (session_id)
                );

                -- Permissions

                ALTER TABLE products.sessions OWNER TO doadmin;
                GRANT ALL ON TABLE products.sessions TO doadmin;


                -- products.sessions foreign keys

                ALTER TABLE products.sessions ADD CONSTRAINT sessions_user_id_fkey FOREIGN KEY (user_id) REFERENCES products.clients(client_id);
